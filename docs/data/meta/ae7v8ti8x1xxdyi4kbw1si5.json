{"id":"ae7v8ti8x1xxdyi4kbw1si5","title":"immutable, bitemporal rdf","desc":"","updated":1728622697044,"created":1728601579619,"custom":{},"fname":"pub.question-log.2024.10.10","type":"note","vault":{"fsPath":"public-notes","remote":{"type":"git","url":"git@github.com:djradon/public-notes.git"},"name":"public-notes"},"contentHash":"b63597741064d485226e1018d8dd4a2a","links":[],"anchors":{"so-relator-based-rdf-i-think-i-also-want-it-to-be-immutable-and-bitemporal":{"type":"header","text":"so relator-based RDF... I think I also want it to be immutable and bitemporal","value":"so-relator-based-rdf-i-think-i-also-want-it-to-be-immutable-and-bitemporal","line":8,"column":0,"depth":2},"1-immutability-in-rdf":{"type":"header","text":"1. Immutability in RDF:","value":"1-immutability-in-rdf","line":12,"column":0,"depth":3},"2-bitemporality":{"type":"header","text":"2. Bitemporality:","value":"2-bitemporality","line":24,"column":0,"depth":3},"considerations-for-bitemporal-and-immutable-rdf":{"type":"header","text":"Considerations for Bitemporal and Immutable RDF:","value":"considerations-for-bitemporal-and-immutable-rdf","line":39,"column":0,"depth":3},"tools-and-technologies":{"type":"header","text":"Tools and Technologies:","value":"tools-and-technologies","line":44,"column":0,"depth":3},"summary":{"type":"header","text":"Summary:","value":"summary","line":49,"column":0,"depth":3},"for-immutability-i-think-using-system-time-aka-transaction-time-might-work-instead-of-versioning-i-see-valid-time-as-part-of-the-data-and-system-time-as-external-to-the-data-just-allowing-immutability-i-was-thinking-about-using-something-like-rdf-delta-to-establish-a-patch-log-so-that-things-can-be-reconstructed-but-maybe-its-not-necessary-if-the-rdf-data-is-already-immutable":{"type":"header","text":"for immutability, I think using \"system-time\" aka \"transaction-time\" might work instead of versioning. I see \"valid time\" as part of the data\", and system time as external to the data, just allowing immutability. I was thinking about using something like RDF-Delta, to establish a patch log, so that things can be reconstructed, but maybe it's not necessary if the RDF data is already immutable.","value":"for-immutability-i-think-using-system-time-aka-transaction-time-might-work-instead-of-versioning-i-see-valid-time-as-part-of-the-data-and-system-time-as-external-to-the-data-just-allowing-immutability-i-was-thinking-about-using-something-like-rdf-delta-to-establish-a-patch-log-so-that-things-can-be-reconstructed-but-maybe-its-not-necessary-if-the-rdf-data-is-already-immutable","line":55,"column":0,"depth":2},"using-system-time-for-immutability":{"type":"header","text":"Using System-Time for Immutability:","value":"using-system-time-for-immutability","line":62,"column":0,"depth":3},"rdf-delta-for-change-tracking":{"type":"header","text":"RDF-Delta for Change Tracking:","value":"rdf-delta-for-change-tracking","line":67,"column":0,"depth":3},"combining-immutability-and-system-time-with-rdf":{"type":"header","text":"Combining Immutability and System-Time with RDF:","value":"combining-immutability-and-system-time-with-rdf","line":74,"column":0,"depth":3},"example":{"type":"header","text":"Example:","value":"example","line":80,"column":0,"depth":3},"conclusion":{"type":"header","text":"Conclusion:","value":"conclusion","line":91,"column":0,"depth":3},"i-want-to-use-extended-datetime-format-edtf--in-general-as-it-is-very-expressive-for-approximation-uncertainty-it-might-not-be-relevant-for-system-from-and-system-to-but-is-there-and-rdf-support-for-edtf":{"type":"header","text":"I want to use Extended Date/Time Format (EDTF)  in general, as it is very expressive for approximation, uncertainty. It might not be relevant for system-from and system-to, but is there and RDF support for edtf?","value":"i-want-to-use-extended-datetime-format-edtf--in-general-as-it-is-very-expressive-for-approximation-uncertainty-it-might-not-be-relevant-for-system-from-and-system-to-but-is-there-and-rdf-support-for-edtf","line":95,"column":0,"depth":2},"rdf-and-edtf-compatibility":{"type":"header","text":"RDF and EDTF Compatibility:","value":"rdf-and-edtf-compatibility","line":99,"column":0,"depth":3},"1-custom-datatypes":{"type":"header","text":"1. Custom Datatypes:","value":"1-custom-datatypes","line":102,"column":0,"depth":3},"2-edtf-ontology":{"type":"header","text":"2. EDTF Ontology:","value":"2-edtf-ontology","line":114,"column":0,"depth":3},"3-literal-representations":{"type":"header","text":"3. Literal Representations:","value":"3-literal-representations","line":117,"column":0,"depth":3},"4-sparql-querying-with-edtf":{"type":"header","text":"4. SPARQL Querying with EDTF:","value":"4-sparql-querying-with-edtf","line":127,"column":0,"depth":3},"example-use-case":{"type":"header","text":"Example Use Case:","value":"example-use-case","line":130,"column":0,"depth":3},"future-possibilities":{"type":"header","text":"Future Possibilities:","value":"future-possibilities","line":137,"column":0,"depth":3},"summary-1":{"type":"header","text":"Summary:","value":"summary-1","line":140,"column":0,"depth":3},"maybe-my-approach-is-bigger-than-relator-based-it-involves-relators-immutability-and-bitemporality":{"type":"header","text":"maybe my approach is \"bigger\" than relator-based. It involves relators, immutability, and bitemporality.","value":"maybe-my-approach-is-bigger-than-relator-based-it-involves-relators-immutability-and-bitemporality","line":148,"column":0,"depth":2},"potential-concepts":{"type":"header","text":"Potential Concepts:","value":"potential-concepts","line":156,"column":0,"depth":3},"how-do-listeners-and-hooks-work-in-jena":{"type":"header","text":"how do listeners and hooks work in jena","value":"how-do-listeners-and-hooks-work-in-jena","line":168,"column":0,"depth":2},"1-listeners-in-jena":{"type":"header","text":"1. Listeners in Jena","value":"1-listeners-in-jena","line":172,"column":0,"depth":3},"key-concepts":{"type":"header","text":"Key Concepts:","value":"key-concepts","line":176,"column":0,"depth":4},"example-1":{"type":"header","text":"Example:","value":"example-1","line":179,"column":0,"depth":4},"how-it-works":{"type":"header","text":"How it works:","value":"how-it-works","line":211,"column":0,"depth":4},"2-hooks-in-jena":{"type":"header","text":"2. Hooks in Jena","value":"2-hooks-in-jena","line":215,"column":0,"depth":3},"hook-example":{"type":"header","text":"Hook Example:","value":"hook-example","line":221,"column":0,"depth":4},"3-usage-scenarios":{"type":"header","text":"3. Usage Scenarios:","value":"3-usage-scenarios","line":224,"column":0,"depth":3},"summary-2":{"type":"header","text":"Summary:","value":"summary-2","line":229,"column":0,"depth":3},"one-tricky-thing-about-the-immutable-it-could-be-complicated-figuring-out-when-to-invalidate-an-existing-relator-based-statement-cluster":{"type":"header","text":"one tricky thing about the immutable... it could be complicated figuring out when to invalidate an existing relator-based statement cluster.","value":"one-tricky-thing-about-the-immutable-it-could-be-complicated-figuring-out-when-to-invalidate-an-existing-relator-based-statement-cluster","line":236,"column":0,"depth":2},"speaking-of-clusters-what-else-could-these-sets-of-statements-be-called-i-think-we-talked-about-it-before-atoms-is-no-good-because-spo-are-atoms":{"type":"header","text":"Speaking of clusters, what else could these sets of statements be called. I think we talked about it before... atoms is no good because s/p/o are atoms.","value":"speaking-of-clusters-what-else-could-these-sets-of-statements-be-called-i-think-we-talked-about-it-before-atoms-is-no-good-because-spo-are-atoms","line":238,"column":0,"depth":2},"1-statement-bundle":{"type":"header","text":"1. Statement Bundle:","value":"1-statement-bundle","line":242,"column":0,"depth":3},"2-relational-group":{"type":"header","text":"2. Relational Group:","value":"2-relational-group","line":245,"column":0,"depth":3},"3-statement-set":{"type":"header","text":"3. Statement Set:","value":"3-statement-set","line":248,"column":0,"depth":3},"4-knowledge-unit":{"type":"header","text":"4. Knowledge Unit:","value":"4-knowledge-unit","line":251,"column":0,"depth":3},"5-context":{"type":"header","text":"5. Context:","value":"5-context","line":254,"column":0,"depth":3},"6-relator-frame":{"type":"header","text":"6. Relator Frame:","value":"6-relator-frame","line":257,"column":0,"depth":3},"7-assertion-cluster":{"type":"header","text":"7. Assertion Cluster:","value":"7-assertion-cluster","line":260,"column":0,"depth":3},"8-relational-block":{"type":"header","text":"8. Relational Block:","value":"8-relational-block","line":263,"column":0,"depth":3},"9-descriptor-set":{"type":"header","text":"9. Descriptor Set:","value":"9-descriptor-set","line":266,"column":0,"depth":3},"summary-3":{"type":"header","text":"Summary:","value":"summary-3","line":269,"column":0,"depth":3}},"children":[],"parent":"06u1yj8plj9m88zesetleb4","data":{}}
