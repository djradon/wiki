{"pageProps":{"note":{"id":"d71xs6ajaac6a4kvx9i0nt2","title":"2024 12 01 Git Statuses","desc":"","updated":1733092002470,"created":1733091604223,"custom":{},"fname":"proj.weave.conv.2024-12-01-git-statuses","type":"note","vault":{"fsPath":"public-notes","remote":{"type":"git","url":"git@github.com:djradon/public-notes.git"},"name":"public-notes"},"contentHash":"9fe3bc7367c83489c6f0aed9f32b3093","links":[],"anchors":{"user":{"type":"header","text":"User","value":"user","line":8,"column":0,"depth":4},"assistant":{"type":"header","text":"Assistant","value":"assistant","line":12,"column":0,"depth":4},"identified-repository-statuses":{"type":"header","text":"Identified Repository Statuses","value":"identified-repository-statuses","line":16,"column":2,"depth":3},"additional-considerations":{"type":"header","text":"Additional Considerations","value":"additional-considerations","line":25,"column":2,"depth":3},"representation-approaches":{"type":"header","text":"Representation Approaches","value":"representation-approaches","line":36,"column":2,"depth":3},"1-using-two-booleans-localchanges-and-remotechanges":{"type":"header","text":"1. Using Two Booleans (localChanges and remoteChanges)","value":"1-using-two-booleans-localchanges-and-remotechanges","line":40,"column":2,"depth":4},"2-using-a-discriminated-union":{"type":"header","text":"2. Using a Discriminated Union","value":"2-using-a-discriminated-union","line":73,"column":2,"depth":4},"recommendation":{"type":"header","text":"Recommendation","value":"recommendation","line":125,"column":2,"depth":3},"enhanced-representation-with-additional-metadata":{"type":"header","text":"Enhanced Representation with Additional Metadata","value":"enhanced-representation-with-additional-metadata","line":129,"column":2,"depth":4},"implementing-in-your-code":{"type":"header","text":"Implementing in Your Code","value":"implementing-in-your-code","line":143,"column":2,"depth":3},"advantages-of-using-a-discriminated-union":{"type":"header","text":"Advantages of Using a Discriminated Union","value":"advantages-of-using-a-discriminated-union","line":285,"column":2,"depth":3},"conclusion":{"type":"header","text":"Conclusion","value":"conclusion","line":292,"column":2,"depth":3}},"children":[],"parent":"c1dkwyi742h6uyvp14dtm0q","data":{}},"body":"<h1 id=\"2024-12-01-git-statuses\">2024 12 01 Git Statuses<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2024-12-01-git-statuses\"></a></h1>\n<h4 id=\"user\"><em>User</em><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#user\"></a></h4>\n<blockquote>\n<p>I'm thinking about how to represent the status of a repo in regards to its origin. I think the possibilities are: current (reflects origin), local changes (needs commit and push), remote changes (behind origin), and local and remote changes (needs merge). Am I missing anything? Should I represent with two booleans, localChanges and remoteChanges? </p>\n</blockquote>\n<h4 id=\"assistant\"><em>Assistant</em><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#assistant\"></a></h4>\n<blockquote>\n<p>You're on the right track with identifying the key statuses of a repository in relation to its origin. Representing these statuses effectively is crucial for maintaining clarity and ensuring type safety in your application. Let's break down your considerations and explore the best approach to model these statuses in TypeScript.</p>\n<h3 id=\"identified-repository-statuses\"><strong>Identified Repository Statuses</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#identified-repository-statuses\"></a></h3>\n<p>Based on your description, the possible statuses are:</p>\n<ol>\n<li><strong>Current</strong>: The local repository is in sync with the origin. No local or remote changes exist.</li>\n<li><strong>Local Changes</strong>: There are changes in the local repository that need to be committed and pushed to the origin.</li>\n<li><strong>Remote Changes</strong>: The origin has been updated, and the local repository is behind. A pull is necessary to sync.</li>\n<li><strong>Local and Remote Changes</strong>: Both local and remote changes exist, necessitating a merge to resolve conflicts.</li>\n</ol>\n<h3 id=\"additional-considerations\"><strong>Additional Considerations</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#additional-considerations\"></a></h3>\n<p>While the four statuses you've identified cover the primary scenarios, consider the following additional states that might be relevant depending on your application's complexity and requirements:</p>\n<ul>\n<li><strong>Untracked Files</strong>: Files that are not tracked by Git.</li>\n<li><strong>Staged Changes</strong>: Changes that are staged for the next commit.</li>\n<li><strong>Conflicted Changes</strong>: Changes that resulted in merge conflicts.</li>\n<li><strong>Detached HEAD</strong>: The repository is in a detached HEAD state, not pointing to any branch.</li>\n</ul>\n<p>However, for the scope you've described, focusing on the four primary statuses is sufficient unless your application specifically requires handling these additional states.</p>\n<h3 id=\"representation-approaches\"><strong>Representation Approaches</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#representation-approaches\"></a></h3>\n<p>There are multiple ways to represent these statuses in TypeScript. Let's evaluate the two primary approaches you've mentioned:</p>\n<h4 id=\"1-using-two-booleans-localchanges-and-remotechanges\"><strong>1. Using Two Booleans (<code>localChanges</code> and <code>remoteChanges</code>)</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-using-two-booleans-localchanges-and-remotechanges\"></a></h4>\n<p><strong>Pros:</strong></p>\n<ul>\n<li><strong>Simplicity</strong>: Easy to implement and understand.</li>\n<li><strong>Flexibility</strong>: Can represent any combination of local and remote changes.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>\n<p><strong>Ambiguity</strong>: The combination of booleans can lead to multiple interpretations. For example:</p>\n<ul>\n<li><code>localChanges = true</code>, <code>remoteChanges = false</code> → Local Changes</li>\n<li><code>localChanges = false</code>, <code>remoteChanges = true</code> → Remote Changes</li>\n<li><code>localChanges = true</code>, <code>remoteChanges = true</code> → Local and Remote Changes</li>\n<li><code>localChanges = false</code>, <code>remoteChanges = false</code> → Current</li>\n</ul>\n</li>\n<li>\n<p><strong>Scalability</strong>: Adding more statuses in the future (e.g., conflicted changes) would complicate the representation.</p>\n</li>\n</ul>\n<p><strong>Example:</strong></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">RepoStatus</span></span> <span class=\"token punctuation\">{</span>\n  localChanges<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  remoteChanges<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>Usage:</strong></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> status<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RepoStatus</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  localChanges<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  remoteChanges<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"2-using-a-discriminated-union\"><strong>2. Using a Discriminated Union</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-using-a-discriminated-union\"></a></h4>\n<p><strong>Pros:</strong></p>\n<ul>\n<li><strong>Clarity</strong>: Each status is explicitly defined, reducing ambiguity.</li>\n<li><strong>Type Safety</strong>: TypeScript can enforce and check the correctness of each status.</li>\n<li><strong>Exhaustiveness Checking</strong>: When using switch statements, TypeScript can ensure all possible cases are handled.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li><strong>Verbosity</strong>: Requires more setup compared to simple booleans.</li>\n<li><strong>Less Flexible for Combinations</strong>: Each combination needs to be explicitly defined.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">RepoStatus</span></span> <span class=\"token operator\">=</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'current'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localChanges'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'remoteChanges'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localAndRemoteChanges'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>Usage:</strong></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> status<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RepoStatus</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localChanges'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>Handling with Switch Statement:</strong></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleRepoStatus</span><span class=\"token punctuation\">(</span>status<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RepoStatus</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">switch</span> <span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span><span class=\"token property-access\">kind</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'current'</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Handle current status</span>\n      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'localChanges'</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Handle local changes</span>\n      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'remoteChanges'</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Handle remote changes</span>\n      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'localAndRemoteChanges'</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Handle both local and remote changes</span>\n      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword module\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// TypeScript ensures this case is never reached</span>\n      <span class=\"token keyword\">const</span> exhaustiveCheck<span class=\"token operator\">:</span> <span class=\"token builtin\">never</span> <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token known-class-name class-name\">Error</span></span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Unhandled status: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>exhaustiveCheck<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"recommendation\"><strong>Recommendation</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#recommendation\"></a></h3>\n<p><strong>Use a Discriminated Union</strong> to represent the repository statuses. This approach provides greater clarity and type safety, making your code more maintainable and less error-prone. It clearly defines each possible state and ensures that all cases are handled appropriately.</p>\n<h4 id=\"enhanced-representation-with-additional-metadata\"><strong>Enhanced Representation with Additional Metadata</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#enhanced-representation-with-additional-metadata\"></a></h4>\n<p>If you anticipate needing more information about each status in the future (e.g., specific details about conflicts or changes), you can extend the discriminated union to include additional properties.</p>\n<p><strong>Example:</strong></p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">RepoStatus</span></span> <span class=\"token operator\">=</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'current'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localChanges'</span><span class=\"token punctuation\">;</span> changes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Specific local changes</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'remoteChanges'</span><span class=\"token punctuation\">;</span> changes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Specific remote changes</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localAndRemoteChanges'</span><span class=\"token punctuation\">;</span> localChanges<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> remoteChanges<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"implementing-in-your-code\"><strong>Implementing in Your Code</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#implementing-in-your-code\"></a></h3>\n<p>Here's how you can integrate the discriminated union into your existing <code>checkoutRepos.ts</code>:</p>\n<ol>\n<li><strong>Define the <code>RepoStatus</code> Type</strong></li>\n</ol>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// src/types.ts or a separate types file</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">RepoStatus</span></span> <span class=\"token operator\">=</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'current'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localChanges'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'remoteChanges'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localAndRemoteChanges'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ol start=\"2\">\n<li><strong>Determine the Repo Status</strong></li>\n</ol>\n<p>Modify your <code>checkoutRepos</code> function to determine and assign the appropriate <code>RepoStatus</code>.</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">RepoStatus</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"../types.ts\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Adjust the import path accordingly</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">checkoutRepos</span><span class=\"token punctuation\">(</span>repoDir<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> inclusions<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Inclusion</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">RepoCheckoutResult</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> results<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RepoCheckoutResult</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Filter for only active git inclusions</span>\n  <span class=\"token keyword\">const</span> gitInclusions <span class=\"token operator\">=</span> inclusions\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span>inclusion <span class=\"token arrow operator\">=></span> inclusion<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span> <span class=\"token operator\">===</span> <span class=\"token string\">'git'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span>inclusion <span class=\"token arrow operator\">=></span> inclusion<span class=\"token punctuation\">.</span><span class=\"token property-access\">options</span><span class=\"token operator\">?.</span>active <span class=\"token operator\">!==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> inclusion <span class=\"token keyword\">of</span> gitInclusions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> inclusion<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> include <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> exclude <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> excludeByDefault <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> branch<span class=\"token operator\">:</span> providedBranch <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> inclusion<span class=\"token punctuation\">.</span><span class=\"token property-access\">options</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Determine the actual branch to use</span>\n    <span class=\"token keyword\">const</span> branch <span class=\"token operator\">=</span> providedBranch <span class=\"token operator\">??</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">determineDefaultBranch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Parse the URL and construct the local repository path</span>\n    <span class=\"token keyword\">const</span> localRepoPath <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">ensureLocalRepoPath</span><span class=\"token punctuation\">(</span>repoDir<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> branch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Ensuring repository at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>localRepoPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>excludeByDefault <span class=\"token operator\">&#x26;&#x26;</span> include<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Excluding all files by default, and no inclusions specified, so nothing to do for </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow\">continue</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Skip to the next inclusion</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> repoStatus<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RepoStatus</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword control-flow\">await</span> <span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>localRepoPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\".git\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Initializing working directory at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>localRepoPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">runGitCommand</span><span class=\"token punctuation\">(</span>localRepoPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"init\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Git working directory initialized.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Adding remote origin: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">runGitCommand</span><span class=\"token punctuation\">(</span>localRepoPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"remote\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Initial clone or setup actions...</span>\n\n        repoStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'current'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Fetch the latest changes to determine the status</span>\n        <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">runGitCommand</span><span class=\"token punctuation\">(</span>localRepoPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Determine local and remote status (this requires implementing logic to check status)</span>\n        <span class=\"token keyword\">const</span> hasLocalChanges <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">checkLocalChanges</span><span class=\"token punctuation\">(</span>localRepoPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Implement this function</span>\n        <span class=\"token keyword\">const</span> hasRemoteChanges <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">checkRemoteChanges</span><span class=\"token punctuation\">(</span>localRepoPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Implement this function</span>\n\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>hasLocalChanges <span class=\"token operator\">&#x26;&#x26;</span> hasRemoteChanges<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          repoStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localAndRemoteChanges'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>hasLocalChanges<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          repoStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'localChanges'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>hasRemoteChanges<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          repoStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'remoteChanges'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n          repoStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> kind<span class=\"token operator\">:</span> <span class=\"token string\">'current'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Handle different statuses accordingly</span>\n      <span class=\"token keyword control-flow\">switch</span> <span class=\"token punctuation\">(</span>repoStatus<span class=\"token punctuation\">.</span><span class=\"token property-access\">kind</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'current'</span><span class=\"token operator\">:</span>\n          log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Repository </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is up-to-date.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'localChanges'</span><span class=\"token operator\">:</span>\n          log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Repository </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> has local changes that need to be committed and pushed.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'remoteChanges'</span><span class=\"token operator\">:</span>\n          log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Repository </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is behind origin and needs to be pulled.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'localAndRemoteChanges'</span><span class=\"token operator\">:</span>\n          log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Repository </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> has both local and remote changes and needs to be merged.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Proceed with checkout, pull, push, or merge based on status</span>\n      <span class=\"token comment\">// ...</span>\n\n      <span class=\"token comment\">// Add to results as success</span>\n      results<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">,</span>\n        localPath<span class=\"token operator\">:</span> localRepoPath<span class=\"token punctuation\">,</span>\n        status<span class=\"token operator\">:</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error handling repository </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      results<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">,</span>\n        localPath<span class=\"token operator\">:</span> localRepoPath<span class=\"token punctuation\">,</span>\n        status<span class=\"token operator\">:</span> <span class=\"token string\">'failed'</span><span class=\"token punctuation\">,</span>\n        message<span class=\"token operator\">:</span> <span class=\"token string\">'An error occurred during the repository setup.'</span><span class=\"token punctuation\">,</span>\n        error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow\">continue</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Skip to the next repository</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword control-flow\">return</span> results<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"3\">\n<li><strong>Implement Helper Functions</strong></li>\n</ol>\n<p>To determine the <code>RepoStatus</code>, you'll need to implement functions that check for local and remote changes.</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">checkLocalChanges</span><span class=\"token punctuation\">(</span>repoPath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">runGitCommand</span><span class=\"token punctuation\">(</span>repoPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--porcelain'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> output<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">checkRemoteChanges</span><span class=\"token punctuation\">(</span>repoPath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> localHead <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">runGitCommand</span><span class=\"token punctuation\">(</span>repoPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'rev-parse'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> remoteHead <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">runGitCommand</span><span class=\"token punctuation\">(</span>repoPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'rev-parse'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@{u}'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> localHead<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> remoteHead<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>Note:</strong> The above <code>checkRemoteChanges</code> function assumes that the local branch is tracking a remote branch. You may need to handle cases where this isn't true.</p>\n<h3 id=\"advantages-of-using-a-discriminated-union\"><strong>Advantages of Using a Discriminated Union</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#advantages-of-using-a-discriminated-union\"></a></h3>\n<ol>\n<li><strong>Type Safety</strong>: TypeScript can enforce the correct handling of each status, reducing runtime errors.</li>\n<li><strong>Clarity</strong>: Each status is explicitly defined, making the code more readable and maintainable.</li>\n<li><strong>Extensibility</strong>: Adding new statuses in the future is straightforward and doesn't require changes to boolean logic.</li>\n<li><strong>Exhaustive Checks</strong>: When using <code>switch</code> statements, TypeScript can ensure all possible cases are handled, enhancing reliability.</li>\n</ol>\n<h3 id=\"conclusion\"><strong>Conclusion</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conclusion\"></a></h3>\n<p>While using two booleans (<code>localChanges</code> and <code>remoteChanges</code>) is a straightforward approach, it introduces potential ambiguities and can become cumbersome as the number of statuses grows. Opting for a <strong>discriminated union</strong> offers a more robust, clear, and type-safe way to represent repository statuses. It aligns well with TypeScript's strengths in type safety and provides a scalable solution for managing repository states.</p>\n<p>If you need further guidance on implementing discriminated unions or handling specific Git statuses, feel free to ask!</p>\n</blockquote>","noteIndex":{"id":"CpS9sdQeO83XthdjEzqoL","title":"djradon's wiki","desc":"","updated":1725596786107,"created":1631142505051,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"public-notes","remote":{"type":"git","url":"git@github.com:djradon/public-notes.git"},"name":"public-notes"},"contentHash":"bba9cf74d5d2d4e8dcab9ae4dbda62e9","links":[{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"ar.swyx.learn-in-public","alias":"learning-in-public","position":{"start":{"line":6,"column":20,"offset":56},"end":{"line":6,"column":66,"offset":102},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ar.swyx.learn-in-public"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"t","position":{"start":{"line":10,"column":3,"offset":228},"end":{"line":10,"column":8,"offset":233},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"t"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"idea","position":{"start":{"line":11,"column":3,"offset":258},"end":{"line":11,"column":11,"offset":266},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"idea"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"ar","position":{"start":{"line":13,"column":5,"offset":377},"end":{"line":13,"column":11,"offset":383},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ar"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"book","position":{"start":{"line":14,"column":5,"offset":426},"end":{"line":14,"column":13,"offset":434},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"book"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"community","position":{"start":{"line":15,"column":5,"offset":439},"end":{"line":15,"column":18,"offset":452},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"community"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"course","position":{"start":{"line":16,"column":5,"offset":457},"end":{"line":16,"column":15,"offset":467},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"course"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"event","position":{"start":{"line":17,"column":5,"offset":472},"end":{"line":17,"column":14,"offset":481},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"event"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"game","position":{"start":{"line":18,"column":5,"offset":486},"end":{"line":18,"column":13,"offset":494},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"game"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"loc","position":{"start":{"line":19,"column":5,"offset":499},"end":{"line":19,"column":12,"offset":506},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"loc"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"org","position":{"start":{"line":20,"column":5,"offset":511},"end":{"line":20,"column":12,"offset":518},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"org"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"user","position":{"start":{"line":21,"column":5,"offset":523},"end":{"line":21,"column":13,"offset":531},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"user"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"prdct","position":{"start":{"line":22,"column":5,"offset":537},"end":{"line":22,"column":14,"offset":546},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"prdct"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"recipe","position":{"start":{"line":23,"column":5,"offset":597},"end":{"line":23,"column":15,"offset":607},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"recipe"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"video","position":{"start":{"line":24,"column":5,"offset":612},"end":{"line":24,"column":14,"offset":621},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"video"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"vs","position":{"start":{"line":25,"column":3,"offset":658},"end":{"line":25,"column":9,"offset":664},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"vs"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"wanted","position":{"start":{"line":26,"column":3,"offset":667},"end":{"line":26,"column":13,"offset":677},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"wanted"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"tags","position":{"start":{"line":28,"column":5,"offset":707},"end":{"line":28,"column":13,"offset":715},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"c","position":{"start":{"line":29,"column":5,"offset":779},"end":{"line":29,"column":10,"offset":784},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"c"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"p","position":{"start":{"line":30,"column":5,"offset":819},"end":{"line":30,"column":10,"offset":824},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"p"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"t.km.zettelkasten","position":{"start":{"line":32,"column":17,"offset":900},"end":{"line":32,"column":38,"offset":921},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"t.km.zettelkasten"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"user.Sönke-Ahrens","alias":"@Sönke-Ahrens","position":{"start":{"line":32,"column":109,"offset":992},"end":{"line":32,"column":122,"offset":1005},"indent":[]},"xvault":false,"to":{"fname":"user.Sönke-Ahrens"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"t.tm.getting-things-done","position":{"start":{"line":34,"column":13,"offset":1077},"end":{"line":34,"column":41,"offset":1105},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"t.tm.getting-things-done"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"user.andy-matuschak","alias":"@andy-matuschak","position":{"start":{"line":42,"column":134,"offset":1443},"end":{"line":42,"column":149,"offset":1458},"indent":[]},"xvault":false,"to":{"fname":"user.andy-matuschak"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"user.maggie-appleton","alias":"@maggie-appleton","position":{"start":{"line":42,"column":154,"offset":1463},"end":{"line":42,"column":170,"offset":1479},"indent":[]},"xvault":false,"to":{"fname":"user.maggie-appleton"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"ar.substack.carpe-noctem","position":{"start":{"line":44,"column":11,"offset":1568},"end":{"line":44,"column":39,"offset":1596},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ar.substack.carpe-noctem"}},{"type":"wiki","from":{"fname":"root","id":"CpS9sdQeO83XthdjEzqoL","vaultName":"public-notes"},"value":"book.how-to-take-smart-notes","position":{"start":{"line":47,"column":7,"offset":1605},"end":{"line":47,"column":39,"offset":1637},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"book.how-to-take-smart-notes"}}],"anchors":{"purpose":{"type":"header","text":"Purpose","value":"purpose","line":10,"column":0,"depth":2},"contents":{"type":"header","text":"Contents","value":"contents","line":14,"column":0,"depth":2},"beware":{"type":"header","text":"Beware!","value":"beware","line":42,"column":0,"depth":2},"what-this-is-not":{"type":"header","text":"What This Is Not","value":"what-this-is-not","line":46,"column":0,"depth":2}},"children":["7272514wvvn78ppl0gxbz1o","1oo01iddhf8xrhghsn50s68","1xo3rb42oibz4c0ci2hns1w","j4v1t5j8jlertnw3qehr7eh","y4mse62vwwswwoy83dog5l8","vxdnqfler524hz0cijghw52","2d2rpnxxhmeddduz9k0hrb1","dfk38hodq90wterkjm41g6d","mt44zhi7hgua7aosvn41m20","d9iapeyx1ykhni9iub35s0j","48sncuimn75uzjhk3fhpnzk","b98hmcjkz5mxbemof53ecrg","x7kou1vhk03q2jo1xgis6ei","c5qcd8cate4ic318mkmmkn0","4o5r1utc0onqbp5y50jo4bv","ctw4hojtksuyqzrhmeuxxv7","ipdzhc7arjmmikv6cc9av4g","avll3ht5e6v6brobqu6tu4f","pk8PcdWdd5M38WncZRnzN","64sr0zgblkoq70tu21r2dpw","pr50duvmwnfu5pf0zohcftk","wfhwxyrxvc5wt4e7yd81ot4","6q10hkz3zuvnueqa9slqqmu","h8etzbpdi04ynqoka3yhiei","llras18my52v1xrhkbmk9c2","q9y3ud88060hd6zdz0myhdr","v6oz4wid9tn2mzmjhcgalzv","ggw3ek46ptgebsgxgihr1dh","4qppc4bpj9d3and3abrlvty","QgQWvVXn3EJF7RptGkK2z","VdoOKc3Rq9WmIDPW3ifi0","g24de3ikvaqmy6bp4m223t0","glaj6jozq0g9ia3qvht816v","y1gcp9ejsspitoo2rfeiu5p","mpq0j669d32a9hlcorxc937","rekx1ix9tyhqy6ddjc3mqwx"],"parent":null,"data":{},"body":"\nWelcome! And beware!  \n\n## Purpose\n\nThis vault is the \"[[learning-in-public|ar.swyx.learn-in-public]]\" part of my Second Brain. If you share some of my interests, please [reach out](https://djradon.github.io)! \n\n## Contents\n\n- [[t]] my personal wikipedia\n- [[idea]] (not necessarily mine)\n- Resource Notes, including highlights, thoughts and metadata, for various things:\n  - [[ar]] mostly articles, papers and web pages\n  - [[book]]\n  - [[community]]\n  - [[course]]\n  - [[event]]\n  - [[game]]\n  - [[loc]]\n  - [[org]]\n  - [[user]] \n  - [[prdct]] mostly software products, but also ontologies\n  - [[recipe]]\n  - [[video]] movies, tv episodes, youtube, etc\n- [[vs]]\n- [[wanted]]\n- Some \"Metadata Notes\":\n  - [[tags]] which may refer to any and multiple (or none) of the above\n  - [[c]]: ways to categorize resources\n  - [[p]]: ways to assert things about resources (mostly abandoned)\n\nIn terms of the [[t.km.zettelkasten]] method, this wiki is a commingling of literature notes with something @Sönke-Ahrens warned about: a \"personal Wikipedia or a database\" [^1]. \n\nIn terms of [[t.tm.getting-things-done]], it's references, someday-maybe, next actions, and public projects.\n\n## Beware!\n\nThis is a cluttered cupboard of jumbled jottings riddled with inaccuracies, confusion, and mistakes.\n\n## What This Is Not\n\n- evergreen-notes/digital-garden: for \"synthesized\" / original-ish publishable big-idea notes that should evolve over time, props to @andy-matuschak and @maggie-appleton\n- blog: for \"point-in-time\" items to be shared: personal news, articles, etc.\n  - e.g., [[ar.substack.carpe-noctem]]\n\n\n[^1]: [[book.how-to-take-smart-notes]]  "},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"none","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"selection","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"none"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"public-notes","remote":{"type":"git","url":"git@github.com:djradon/public-notes.git"},"name":"public-notes"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"djradon's wiki","description":"a personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://djradon.github.io","assetsPrefix":"/wiki","ga":{"tracking":"G-X7H6C4TMC7"},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}